// <auto-generated />
using System;
using CDCNPM_Final.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CDCNPM_FInal.Migrations
{
    [DbContext(typeof(KaraokeContext))]
    [Migration("20191121113840_Time")]
    partial class Time
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CDCNPM_FInal.Models.Booking", b =>
                {
                    b.Property<string>("BookingID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CusName");

                    b.Property<string>("CusPhone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<double>("PreMoney");

                    b.Property<int?>("RoomID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Status");

                    b.Property<double>("Total");

                    b.Property<string>("Username");

                    b.HasKey("BookingID");

                    b.HasIndex("RoomID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.DetailService", b =>
                {
                    b.Property<string>("BookingID");

                    b.Property<string>("ServiceID");

                    b.Property<int>("Quantity");

                    b.Property<string>("Status");

                    b.Property<double>("Total");

                    b.HasKey("BookingID", "ServiceID");

                    b.HasIndex("ServiceID");

                    b.ToTable("DetailServices");
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.Invoice", b =>
                {
                    b.Property<string>("InvoiceID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookingID");

                    b.Property<DateTime>("Invoice_Date");

                    b.Property<double>("Invoice_Total");

                    b.Property<string>("User");

                    b.HasKey("InvoiceID");

                    b.HasIndex("BookingID")
                        .IsUnique()
                        .HasFilter("[BookingID] IS NOT NULL");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.Service", b =>
                {
                    b.Property<string>("ServiceID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<string>("Type");

                    b.Property<string>("Unit");

                    b.HasKey("ServiceID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CDCNPM_Final.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Floor");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("RoomID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.Booking", b =>
                {
                    b.HasOne("CDCNPM_Final.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID");
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.DetailService", b =>
                {
                    b.HasOne("CDCNPM_FInal.Models.Booking", "Booking")
                        .WithMany("DetailServices")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CDCNPM_FInal.Models.Service", "Service")
                        .WithMany("DetailServices")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CDCNPM_FInal.Models.Invoice", b =>
                {
                    b.HasOne("CDCNPM_FInal.Models.Booking", "Booking")
                        .WithOne("Invoice")
                        .HasForeignKey("CDCNPM_FInal.Models.Invoice", "BookingID");
                });
#pragma warning restore 612, 618
        }
    }
}
